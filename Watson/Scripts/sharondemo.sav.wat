declareconstant "ALLPLUSASSOCS";
declareconstant "PLUSASSOCS";
declareconstant "LEFT";
declareconstant "SUMTIMESDIFFERENCE";
declareconstant "BREAKMINUS";
declareconstant "MINUSSUM";
declareconstant "SIGNPULL";
declareconstant "TIMESZERO";
declareconstant "DOUBLE_INVERSE";
declareconstant "DIST";
declareconstant "TIMESASSOC";
declareconstant "TIMESCOMM";
declareconstant "PLUSID";
declareconstant "SUBTRACT";
declareconstant "REVERSE";
declareconstant "PLUSASSOC";
declareconstant "PLUSCOMM";
declareconstant "HYP";
declareconstant "ODDCHOICE";
declareconstant "EQUATION";
declareconstant "NONTRIV";
declareconstant "REFLEX";
declareconstant "CASEINTRO";
declareconstant "FNDIST";
declareconstant "Id";
declareconstant "p2";
declareconstant "p1";
declareconstant "P2";
declareconstant "P1";
declareconstant "COMP";
declareconstant "TYPES";
declareconstant "OUTPUT";
declareconstant "INPUT";
declareconstant "FLIP";
declareconstant "UNEVAL";
declareconstant "EVAL";
declareconstant "BIND";
declareconstant "false";
declareconstant "true";
addoperator "$" "(0) , 0";
addoperator "**" "(0) , 0";
addoperator "-" "(0) , 0";
addoperator "*" "(0) , 0";
addoperator "+" "(0) , 0";
addoperator "@@" "(0) , 0";
addscinleft "@!" "";
addscinleft "<=" "";
addscinleft "=>" "";
precedencereader "-" "1";
precedencereader "*" "3";
precedencereader "+" "1";
setdefaultprec 0;
prefixreader "$" "";
prefixreader "-" "0";
prefixreader "!$" "";
prefixreader "!@" "";
forcetheorem "TYPES" "TYPES , (?t : ?t : ?x) , (?t : ?x) , TYPES , 0";
forcetheorem "COMP" "COMP , ((?f @@ ?g) @ ?x) , (?f @ ?g @ ?x) , COMP , 0";
forcetheorem "P1" "P1 , (P1 @ ?x , ?y) , ?x , P1 , 0";
forcetheorem "P2" "P2 , (P2 @ ?x , ?y) , ?y , P2 , 0";
forcetheorem "p1" "p1 , (p1 @ ?x , ?y) , ?x , p1 , 0";
forcetheorem "p2" "p2 , (p2 @ ?x , ?y) , ?y , p2 , 0";
forcetheorem "Id" "Id , (Id @ ?x) , ?x , Id , 0";
forcetheorem "FNDIST" "FNDIST , (?f @ ?x || ?y , ?z) , (?x || (?f @ ?y) , ?f @ ?z) , FNDIST , 0";
forcetheorem "CASEINTRO" "CASEINTRO , ?x , (?y || ?x , ?x) , CASEINTRO , 0";
forcetheorem "REFLEX" "REFLEX , (?a = ?a) , true , REFLEX , 0";
forcetheorem "NONTRIV" "NONTRIV , (true = false) , false , NONTRIV , 0";
forcetheorem "EQUATION" "EQUATION , (?a = ?b) , ((?a = ?b) || true , false) , EQUATION , 0";
forcetheorem "ODDCHOICE" "ODDCHOICE , ?x , ?x , ODDCHOICE , 0";
forcetheorem "HYP" "HYP , ((?a = ?b) || (?f @ ?a) , ?c) , ((?a = ?b) || (?f @ ?b) , ?c) , HYP , 0";
forcetheorem "REVERSE" "REVERSE , ?x + ?y + ?z , ?z + ?y + ?x , PLUSASSOC , PLUSCOMM , 0";
forcetheorem "TIMESASSOC" "TIMESASSOC , ?x * (?y * ?z) , ?x * ?y * ?z , TIMESASSOC , 0";
forcetheorem "DOUBLE_INVERSE" "DOUBLE_INVERSE , - (- ?x) , ?x , PLUSASSOC , PLUSCOMM , PLUSID , SUBTRACT , 0";
forcetheorem "TIMESZERO" "TIMESZERO , ?x * 0 , 0 , DIST , PLUSASSOC , PLUSID , SUBTRACT , 0";
forcetheorem "}SIGNPULL" "SIGNPULL , ?x * (- ?y) , - ?x * ?y , PLUSID , PLUSCOMM , DIST , PLUSASSOC , SUBTRACT , 0";
forcetheorem "MINUSSUM" "MINUSSUM , - ?x + (- ?y) , - (?x + ?y) , PLUSASSOC , PLUSCOMM , PLUSID , SUBTRACT , 0";
forcetheorem "DIST" "DIST , ?x * (?y + ?z) , ?x * ?y + ?x * ?z , DIST , 0";
forcetheorem "SIGNPULL" "SIGNPULL , ?x * (- ?y) , - ?x * ?y , DIST , PLUSASSOC , PLUSCOMM , PLUSID , SUBTRACT , 0";
forcetheorem "TIMESCOMM" "TIMESCOMM , ?x * ?y , ?y * ?x , TIMESCOMM , 0";
forcetheorem "BREAKMINUS" "BREAKMINUS , ?x - ?y , ?x + (- ?y) , PLUSASSOC , PLUSCOMM , PLUSID , SUBTRACT , 0";
forcetheorem "SUMTIMESDIFFERENCE" "SUMTIMESDIFFERENCE , (?x - ?y) * (?x + ?y) , ?x * ?x - ?y * ?y , DIST , PLUSASSOC , PLUSCOMM , PLUSID , SUBTRACT , TIMESCOMM , 0";
forcetheorem "PLUSCOMM" "PLUSCOMM , ?x + ?y , ?y + ?x , PLUSCOMM , 0";
forcetheorem "**" "(?thm1 ** ?thm2) , ?x , (?thm2 => ?thm1 => ?x) , 0";
forcetheorem "PLUSID" "PLUSID , 0 + ?x , ?x , PLUSID , 0";
forcetheorem "$" "($ ?thm) , ?x , (?thm <= ?x) , 0";
forcetheorem "SUBTRACT" "SUBTRACT , ?x - ?y + ?y , ?x , SUBTRACT , 0";
forcetheorem "PLUSASSOC" "PLUSASSOC , ?x + (?y + ?z) , ?x + ?y + ?z , PLUSASSOC , 0";
forcetheorem "}backup" "backup , ?x + (?y + ?z) + (?y + (?u + ?v)) + (?e + ?f) + ?u + ?v , ?x + ?y + ?z + ?y + ?u + ?v + ?e + ?f + ?u + ?v , PLUSASSOC , 0";
forcetheorem "PLUSASSOCS" "PLUSASSOCS , ?x + (?y + ?z) , (PLUSASSOCS => ?x + ?y + ?z) , PLUSASSOC , 0";
forcetheorem "LEFT" "(LEFT @ ?thm) , (?x ^+ ?y) , ((?thm => ?x) ^+ ?y) , 0";
forcetheorem "ALLPLUSASSOCS" "ALLPLUSASSOCS , ?x + ?y , ((LEFT @ ALLPLUSASSOCS) => PLUSASSOCS => ?x + ?y) , 0";
adddef "Id" "Id";
adddef "p2" "p2";
adddef "p1" "p1";
adddef "P2" "P2";
adddef "P1" "P1";
adddef "COMP" "@@";
addscript "sharondemo";
setprogram "p2" "p2";
setprogram "p1" "p1";
adddefdep2 "ALLPLUSASSOCS" "0";
adddefdep2 "PLUSASSOCS" "0";
adddefdep2 "$" "0";
adddefdep2 "**" "0";
adddefdep2 "LEFT" "0";
adddefdep2 "SUMTIMESDIFFERENCE" "0";
adddefdep2 "BREAKMINUS" "0";
adddefdep2 "MINUSSUM" "0";
adddefdep2 "SIGNPULL" "0";
adddefdep2 "TIMESZERO" "0";
adddefdep2 "DOUBLE_INVERSE" "0";
adddefdep2 "DIST" "0";
adddefdep2 "TIMESASSOC" "0";
adddefdep2 "TIMESCOMM" "0";
adddefdep2 "PLUSID" "0";
adddefdep2 "SUBTRACT" "0";
adddefdep2 "REVERSE" "0";
adddefdep2 "PLUSASSOC" "0";
adddefdep2 "PLUSCOMM" "0";
adddefdep2 "HYP" "0";
adddefdep2 "ODDCHOICE" "0";
adddefdep2 "EQUATION" "0";
adddefdep2 "NONTRIV" "0";
adddefdep2 "REFLEX" "0";
adddefdep2 "CASEINTRO" "0";
adddefdep2 "FNDIST" "0";
adddefdep2 "Id" "Id , 0";
adddefdep2 "p2" "p2 , 0";
adddefdep2 "p1" "p1 , 0";
adddefdep2 "P2" "P2 , 0";
adddefdep2 "P1" "P1 , 0";
adddefdep2 "COMP" "COMP , 0";
adddefdep2 "TYPES" "0";
addthmtextdep2 "ALLPLUSASSOCS" "LEFT , ALLPLUSASSOCS , PLUSASSOCS , 0";
addthmtextdep2 "PLUSASSOCS" "PLUSASSOCS , 0";
addthmtextdep2 "LEFT" "LEFT , 0";
addthmtextdep2 "$" "(?x $ ?y) , 0";
addthmtextdep2 "**" "(?x ** ?y) , 0";
addthmtextdep2 "SUMTIMESDIFFERENCE" "SUMTIMESDIFFERENCE , 0";
addthmtextdep2 "BREAKMINUS" "BREAKMINUS , 0";
addthmtextdep2 "MINUSSUM" "MINUSSUM , 0";
addthmtextdep2 "SIGNPULL" "SIGNPULL , 0";
addthmtextdep2 "TIMESZERO" "TIMESZERO , 0";
addthmtextdep2 "DOUBLE_INVERSE" "DOUBLE_INVERSE , 0";
addthmtextdep2 "DIST" "DIST , 0";
addthmtextdep2 "TIMESASSOC" "TIMESASSOC , 0";
addthmtextdep2 "TIMESCOMM" "TIMESCOMM , 0";
addthmtextdep2 "PLUSID" "PLUSID , 0";
addthmtextdep2 "SUBTRACT" "SUBTRACT , 0";
addthmtextdep2 "REVERSE" "REVERSE , 0";
addthmtextdep2 "PLUSASSOC" "PLUSASSOC , 0";
addthmtextdep2 "PLUSCOMM" "PLUSCOMM , 0";
addthmtextdep2 "HYP" "HYP , 0";
addthmtextdep2 "ODDCHOICE" "ODDCHOICE , 0";
addthmtextdep2 "EQUATION" "EQUATION , 0";
addthmtextdep2 "NONTRIV" "NONTRIV , 0";
addthmtextdep2 "REFLEX" "REFLEX , 0";
addthmtextdep2 "CASEINTRO" "CASEINTRO , 0";
addthmtextdep2 "FNDIST" "FNDIST , 0";
addthmtextdep2 "Id" "Id , 0";
addthmtextdep2 "p2" "p2 , 0";
addthmtextdep2 "p1" "p1 , 0";
addthmtextdep2 "P2" "P2 , 0";
addthmtextdep2 "P1" "P1 , 0";
addthmtextdep2 "COMP" "COMP , 0";
addthmtextdep2 "TYPES" "TYPES , 0";
quit();
