to addvector :v1 :v2
output (list (posremainder ((first :v1)+(first :v2)) :fungewidth ) (posremainder ((first (butfirst :v1))+(first(butfirst :v2))) :fungeheight))
end

to befunge
while [not((mditem :ip :funge) = (ascii "@))] [onestep]
end

to butfirst2 :L
ifelse (:L=[]) [output :L] [output (butfirst :L)]
end

to east
make "iv [1 0]
end

to first2 :L
ifelse (:L=[]) [output 0] [output (first :L)]
end

to fungerefresh
penup
clean
for [i 0 (:fungewidth-1)] [for [j 0 (:fungeheight-1)] [ifelse (and ((mditem (list :i :j) :funge)>31)((mditem (list :i :j) :funge)<127)) [setpos (list (10*:i-300) (175-15*:j)) label(char (mditem (list :i :j) :funge))] [setpos (list (10*:i-300) (175-15*:j)) label (char 137)]]]
end

to getfile :file
openread :file
setread :file
makefungespace 80 25
readlines
close :file
end

to go
make "ip (addvector :ip :iv)
setpos (list (10*(first :ip)-300) (175-15*(first(butfirst :ip))))
end

to initialize
make "ip [0 0]
make "iv [1 0]
make "fungestack []
make "fungeinput "
setread []
end

to intdiv :x :y
if (:y=0) [output 0]
output (int(:x/:y))
end

to loadfunge :name
make "funge (run (list "first (word ": :name)))
run [make "fungeheight (first (run (list "butfirst (word ": :name))))]
run [make "fungewidth (first (butfirst (run (list "butfirst (word ": :name)))))]
fungerefresh
end

to makecell :x :y :value
if (and (:value > 31) (:value < 127)) [setpos (list (-300+10*(posremainder :x :fungewidth)) (175-15*(posremainder :y :fungeheight))) label (char :value)]
if (or (:value < 32) (:value > 126)) [setpos (list (-300+10*(posremainder :x :fungewidth)) (175-15*(posremainder :y :fungeheight))) label (char 137)]
mdsetitem (list (posremainder :x :fungewidth) (posremainder :y :fungeheight)) :funge (negremainder :value (:wordsize))
end

to makefungespace :L :W
clean
penup
setlabelfont [[Courier] 10 5]
make "wordsize ((65536*65536))
make "fungestack []
make "fungeinput "
make "ip [0 0]
make "iv [1 0]
make "funge (mdarray (list :L :W) 0)
make "fungewidth :L
make "fungeheight :W
for (list "i 0 (:L-1)) [for (list "j 0 (:W-1)) [mdsetitem (list :i :j) :funge 32]]
end

to modmultiply :x :y :m
if (:x=0) [output 0]
if (:x=1) [output :y]
output (negremainder ((negremainder ((2*(modmultiply (int(:x/ 2)) :y :m))) :m) + ((sameremainder :x 2)*:y)) :m)
end

to negremainder :x :y
if (:y<0) [output (negremainder :x (-:y))]
ifelse ((posremainder :x :y) < :y/2) [output((posremainder :x :y))] [output((posremainder :x :y)-:y)] 
end

to north
make "iv [0 -1]
end

to onestep
make "currentop (mditem :ip :funge)
while [or (:currentop<33)(:currentop>126)] [go make "currentop (mditem :ip :funge)]
if ((char :currentop)="0) [make "fungestack (fput 0 :fungestack)]
if ((char :currentop) ="1) [make "fungestack (fput 1 :fungestack)]
if ((char :currentop) = "2) [make "fungestack (fput 2 :fungestack)]
if ((char :currentop) = "3) [make "fungestack (fput 3 :fungestack)]
if ((char :currentop) = "4) [make "fungestack (fput 4 :fungestack)]
if ((char :currentop) = "5) [make "fungestack (fput 5 :fungestack)]
if ((char :currentop) = "6) [make "fungestack (fput 6 :fungestack)]
if ((char :currentop) = "7) [make "fungestack (fput 7 :fungestack)]
if ((char :currentop) = "8) [make "fungestack (fput 8 :fungestack)]
if ((char :currentop) = "9) [make "fungestack (fput 9 :fungestack)]
if ((char :currentop) = ">) [east]
if ((char :currentop) = "<) [west]
if ((char :currentop) = "^) [north]
if ((char :currentop) = "v) [south]
if ((char :currentop) = "+) [pop2 make "fungestack (fput (negremainder(:p2+:p1):wordsize) :fungestack)]
if ((char :currentop) = "*) [pop2 make "fungestack (fput (modmultiply :p2 :p1 :wordsize) :fungestack)]
if ((char :currentop) = "-) [pop2 make "fungestack (fput (negremainder(:p2-:p1):wordsize) :fungestack)]
if ((char :currentop)="/) [pop2 make "fungestack (fput (negremainder(intdiv :p2 :p1):wordsize) :fungestack)]
if ((char :currentop)="%) [pop2 make "fungestack (fput (sameremainder :p2 :p1) :fungestack)]
if ((char :currentop) = ".) [type (first2 :fungestack) type "| | make "fungestack (butfirst2 (:fungestack)) wait 1]
if ((char :currentop) = ",) [type (char(first2 :fungestack)) make "fungestack (butfirst2 :fungestack) wait 1]
if ((char :currentop) = "!) [ifelse ((first2 :fungestack) = 0) [make "fungestack (fput 1 (butfirst2 :fungestack))] [make "fungestack (fput 0 (butfirst2 :fungestack))]]
if ((char :currentop) = "`) [pop2 ifelse (:p2>:p1)[make "fungestack (fput 1 :fungestack)][make "fungestack (fput 0 :fungestack)]]
if ((char :currentop) = "_) [ifelse ((first2 :fungestack)=0) [east][west] make "fungestack (butfirst2 :fungestack)]
if ((char :currentop) = (char 124)) [ifelse ((first2 :fungestack)=0) [south][north] make "fungestack (butfirst2 :fungestack)]
if ((char :currentop) = "#) [go]
if ((char :currentop) = ":) [make "fungestack (fput (first2 :fungestack) :fungestack)]
if ((char :currentop) = "$) [make "fungestack (butfirst2 :fungestack)]
if ((char :currentop) = (char 92)) [pop2 make "fungestack (fput :p2 (fput :p1 :fungestack))]
if ((char :currentop) = "\~) [if (:fungeinput = ") [print "|Character input requested| make "fungeinput (word readword (char 10))] make "fungestack (fput (ascii(first :fungeinput)) :fungestack) make "fungeinput (butfirst :fungeinput)]
if ((char :currentop) = "&) [print "|Numerical input requested| make "fungestack (fput (negremainder readword (:wordsize)) :fungestack)]
if ((char :currentop) = "g) [pop2 make "fungestack (fput (mditem (list (posremainder :p2 :fungewidth) (posremainder :p1 :fungeheight)) :funge) :fungestack)]
if ((char :currentop) = "p) [pop2 makecell :p2 :p1 (first2 :fungestack) make "fungestack (butfirst2 :fungestack)]
if ((char :currentop) = "") [go (while [not((mditem :ip :funge)=34)] [make "fungestack (fput (mditem :ip :funge) :fungestack) go])]
if ((char :currentop) = "?) [make "dir (random 4) if (:dir=0) [east] if (:dir=1) [west] if (:dir=2) [north] if (:dir = 3) [south]]
go
end

to onesteps
setread []
if (or (not (:tick = "a)) (:currentop = (ascii "\~))) [make "tick readchar]
print :ip
print :iv
print (char (mditem :ip :funge))
print :fungestack
onestep
print (char 10)
if (and(not (:tick = "q))(not(:currentop=(ascii "@)))) [onesteps]
end

to pop2
make "p1 (negremainder (first2 :fungestack) (:wordsize))
make "p2 (negremainder (first2 (butfirst2 :fungestack)) (:wordsize))
make "fungestack (butfirst2(butfirst2 :fungestack))
end

to posremainder :x :y
if (:y<0) [output (posremainder :x (-:y))]
if (:y=0) [output :x]
if ((remainder2 :x :y) > -1) [output (remainder2 :x :y)]
output ((remainder2 :x :y)+:y)
end

to putcell :value
makecell (first :ip) (first (butfirst :ip)) :value
end

to readaline
make "next readchar
make "line3 "
while [and (not(:next = [])) (or((ascii :next)<32) ((ascii :next)>126))] [make "next readchar]
while [and (not(:next = [])) (and ((ascii :next)>31) ((ascii :next)<127))] [make "line3 (word :line3 :next) make "next readchar]
if (:next = []) [output []]
output :line3
end

to readlines
make "line2 readaline
if (not(:line2=[])) [typeline :line2 make "ip (list 0 ((first (butfirst :ip))+1)) readlines]
end

to remainder2 :x :m
if (:m=0) [output :x]
output(:x- :m*(int(:x/:m)))
end

to return
end

to sameremainder :x :m
if (:m<0) [output (sameremainder :x (-:m))]
if (:m=0) [output :x]
output (:x - (:m*(int(:x/:m))))
end

to savefunge :name
make :name (list :funge :fungeheight :fungewidth)
end

to south
make "iv [0 1]
end

to typecell :c
putcell (ascii :c) go
end

to typeline :line
if (not(:line = ")) [typecell (first :line) typeline (butfirst :line)] 
end

to typereadline
typeline readword
end

to west
make "iv [-1 0]
end

Make "a {{13 [] []}@0 {[] 3 4}@0}@0
Make "b 3
Make "beer [{{94 62 94 94 60 32 32 32 32 32}@0 {118 62 50 49 118 32 32 32 32 32}@0 {51 92 58 58 49 32 32 32 32 32}@0 {58 58 44 95 58 32 32 32 32 32}@0 {45 46 44 64 42 32 32 32 32 32}@0 {49 48 34 35 57 32 32 32 32 32}@0 {36 34 44 58 43 32 32 32 32 32}@0 {36 101 34 44 54 32 32 32 32 32}@0 {95 108 32 44 53 32 32 32 32 32}@0 {44 116 32 44 32 32 32 32 32 32}@0 {35 116 32 34 32 32 32 32 32 32}@0 {33 111 32 46 32 32 32 32 32 32}@0 {32 98 32 34 32 32 32 32 32 32}@0 {35 34 32 58 32 32 32 32 32 32}@0 {58 62 32 95 32 32 32 32 32 32}@0 {60 58 60 94 32 32 32 32 32 32}@0 {92 35 32 35 32 32 32 32 32 32}@0 {42 44 32 33 32 32 32 32 32 32}@0 {53 95 32 45 32 32 32 32 32 32}@0 {50 36 32 51 32 32 32 32 32 32}@0 {34 34 32 92 32 32 32 32 32 32}@0 {44 115 32 42 32 32 32 32 32 32}@0 {84 34 32 50 32 32 32 32 32 32}@0 {97 92 32 53 32 32 32 32 32 32}@0 {107 49 32 36 32 32 32 32 32 32}@0 {101 45 32 95 32 32 32 32 32 32}@0 {32 35 32 44 32 32 32 32 32 32}@0 {111 118 62 35 32 32 32 32 32 32}@0 {110 95 44 33 32 32 32 32 32 32}@0 {101 36 32 32 32 32 32 32 32 32}@0 {32 62 94 35 32 32 32 32 32 32}@0 {100 48 32 58 32 32 32 32 32 32}@0 {111 34 32 60 32 32 32 32 32 32}@0 {119 114 32 34 32 32 32 32 32 32}@0 {110 101 32 32 32 32 32 32 32 32}@0 {44 101 32 111 32 32 32 32 32 32}@0 {32 98 32 110 32 32 32 32 32 32}@0 {112 32 32 32 32 32 32 32 32 32}@0 {97 102 32 116 32 32 32 32 32 32}@0 {115 111 32 104 32 32 32 32 32 32}@0 {115 32 32 101 32 32 32 32 32 32}@0 {32 34 32 32 32 32 32 32 32 32}@0 {105 62 32 119 32 32 32 32 32 32}@0 {116 58 32 97 32 32 32 32 32 32}@0 {32 35 32 108 32 32 32 32 32 32}@0 {97 44 32 108 32 32 32 32 32 32}@0 {114 95 32 34 32 32 32 32 32 32}@0 {111 36 32 48 32 32 32 32 32 32}@0 {117 58 32 32 32 32 32 32 32 32}@0 {110 50 32 32 32 32 32 32 32 32}@0 {100 45 32 32 32 32 32 32 32 32}@0 {44 33 32 32 32 32 32 32 32 32}@0 {34 32 32 32 32 32 32 32 32 32}@0 {42 32 32 32 32 32 32 32 32 32}@0 {53 32 32 32 32 32 32 32 32 32}@0 {50 32 32 32 32 32 32 32 32 32}@0 {48 32 32 32 32 32 32 32 32 32}@0 {60 124 32 60 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32}@0}@0 10 60]
Make "currentop 60
Make "dir 2
Make "euclid [{{0 112 38 62 1 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 62 38 94 2 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {62 58 124 62 0 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {62 94 32 36 1 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {58 112 58 46 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {57 48 92 64 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {37 48 95 94 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {48 43 48 33 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {48 49 48 103 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {103 103 103 48 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {52 48 49 48 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {112 48 45 43 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {57 95 48 103 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {47 36 48 52 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {58 35 112 103 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {118 60 57 48 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 37 42 48 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {48 94 118 60 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0}@0 25 80]
Make "f {{[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0 {[] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] [] []}@0}@0
Make "funge {{0 3 1 3 3 42 42 42 42 42 62 94 32 94 32 32 67 34 98 32 32 32 32 32 32}@0 {42 82 80 46 46 46 46 112 114 42 48 95 94 95 94 32 104 72 121 32 32 32 32 32 32}@0 {42 78 80 46 46 46 46 112 110 42 49 118 45 32 32 62 101 117 32 32 32 32 32 32 32}@0 {42 66 80 46 46 46 46 112 98 42 118 62 34 32 33 34 115 110 109 32 32 32 32 32 32}@0 {42 81 80 46 46 112 46 112 113 42 32 53 107 32 112 33 115 103 116 32 32 32 32 32 32}@0 {42 75 80 46 46 46 46 112 107 42 32 53 34 48 56 110 32 114 118 32 32 32 32 32 32}@0 {42 66 80 46 46 46 46 112 98 42 32 43 95 94 48 105 112 121 101 32 32 32 32 32 32}@0 {42 78 80 46 46 46 46 112 110 42 32 44 35 96 58 119 114 32 32 32 32 32 32 32 32}@0 {42 82 80 46 46 46 46 112 114 42 62 32 94 34 43 32 111 100 97 32 32 32 32 32 32}@0 {42 42 42 42 42 42 42 42 42 42 44 103 32 97 49 73 103 114 116 32 32 32 32 32 32}@0 {62 44 43 53 53 32 32 94 62 94 48 58 35 34 103 34 46 97 32 32 32 32 32 32 32}@0 {57 32 118 62 118 62 94 32 58 103 50 34 43 58 56 32 32 103 102 32 32 32 32 32 32}@0 {34 32 112 56 57 34 44 32 34 51 103 96 36 95 36 118 62 111 114 32 32 32 32 32 32}@0 {43 32 48 96 46 124 103 32 96 48 58 34 35 118 60 32 53 110 111 32 32 32 32 32 32}@0 {32 32 48 33 45 34 103 32 34 112 34 118 60 35 62 94 53 34 120 32 32 32 32 32 32}@0 {32 32 58 53 92 44 48 32 43 103 57 32 32 45 48 42 43 32 50 32 32 32 32 32 32}@0 {34 32 43 53 57 49 48 32 44 50 34 32 32 34 52 96 44 118 53 32 32 32 32 32 32}@0 {44 32 49 43 103 45 45 32 48 48 92 32 32 46 103 103 62 49 46 32 32 32 32 32 32}@0 {62 94 103 44 48 58 92 32 52 103 45 32 32 34 48 51 58 46 100 32 32 32 32 32 32}@0 {44 34 32 35 48 58 57 32 103 49 44 32 32 58 96 48 35 49 104 32 32 32 32 32 32}@0 {44 45 32 118 60 33 32 32 58 48 103 32 32 103 42 57 44 32 115 32 32 32 32 32 32}@0 {49 43 60 95 35 124 60 32 34 34 58 32 32 103 57 96 95 40 46 32 32 32 32 32 32}@0 {45 34 112 57 118 62 32 32 57 46 34 32 32 52 48 48 64 83 111 32 32 32 32 32 32}@0 {58 32 32 34 33 35 32 32 34 34 80 32 32 48 52 103 32 83 114 32 32 32 32 32 32}@0 {118 95 32 43 58 118 62 32 92 43 34 32 32 103 103 51 32 41 103 32 32 32 32 32 32}@0 {32 118 60 32 45 95 53 32 45 33 45 32 35 51 96 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 49 34 53 32 44 43 56 32 118 60 42 32 32 32 32 32 32 32 32 32 32}@0 {62 34 32 34 44 43 94 32 112 96 48 32 95 32 94 60 32 32 94 32 32 32 32 32 32}@0 {58 118 62 44 44 45 118 60 94 103 52 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {44 58 58 32 32 34 32 32 32 60 94 118 32 49 62 32 62 124 60 32 32 32 32 32 32}@0 {44 43 44 118 60 94 32 62 32 32 32 32 94 32 103 118 32 60 32 32 32 32 32 32 32}@0 {34 49 34 32 32 118 32 62 32 32 118 95 118 62 58 42 51 32 32 32 32 32 32 32 32}@0 {64 44 71 118 62 56 32 35 32 32 37 103 58 58 48 37 103 32 32 32 32 32 32 32 32}@0 {34 34 34 53 53 60 57 48 124 62 50 50 43 48 51 50 48 118 60 32 32 32 32 32 32}@0 {32 32 96 32 43 32 35 43 45 50 103 47 103 51 112 47 52 112 32 32 32 32 32 32 32}@0 {32 34 33 36 44 32 44 103 34 103 112 50 49 112 48 50 103 51 32 32 32 32 32 32 32}@0 {118 60 124 60 32 32 55 58 80 49 52 37 48 48 52 103 49 95 32 32 32 32 32 32 32}@0 {62 32 112 94 94 32 32 34 34 43 48 50 45 96 103 48 43 118 60 32 32 32 32 32 32}@0 {49 118 62 92 32 32 36 100 95 118 60 42 49 92 103 48 58 35 32 32 32 32 32 32 32}@0 {43 52 52 48 32 32 36 34 118 62 32 118 60 48 34 33 48 45 32 32 32 32 32 32 32}@0 {58 45 42 92 32 32 36 37 35 36 32 118 62 52 46 45 52 34 32 32 32 32 32 32 32}@0 {52 49 37 95 32 62 32 94 45 50 32 48 92 103 34 51 112 46 32 32 32 32 32 32 32}@0 {96 126 58 118 118 32 60 32 34 118 62 95 45 103 45 103 103 34 32 32 32 32 32 32 32}@0 {33 58 55 35 62 124 32 62 78 37 49 118 62 34 33 52 118 60 32 32 32 32 32 32 32}@0 {118 95 96 33 49 118 62 34 34 50 48 35 92 97 32 48 32 32 32 32 32 32 32 32 32}@0 {62 94 118 60 43 34 32 46 58 103 48 37 48 34 118 95 32 32 32 32 32 32 32 32 32}@0 {49 118 45 95 32 113 37 34 95 36 103 50 48 32 32 118 51 112 60 32 32 32 32 32 32}@0 {126 43 62 94 32 34 48 44 118 60 50 47 103 32 32 60 32 124 60 32 32 32 32 32 32}@0 {53 53 36 32 32 43 48 49 35 32 47 52 56 118 96 42 33 60 32 32 32 32 32 32 32}@0 {118 60 36 32 32 55 112 43 45 32 50 103 47 118 62 118 62 32 32 32 32 32 32 32 32}@0 {62 32 94 32 32 103 48 32 34 32 37 48 50 48 92 48 51 118 60 32 32 32 32 32 32}@0 {48 62 124 62 32 112 57 32 75 32 35 48 37 95 45 43 112 112 32 32 32 32 32 32 32}@0 {49 95 33 58 32 57 103 32 34 32 118 60 32 118 62 103 48 52 32 32 32 32 32 32 32}@0 {103 34 45 34 32 48 34 32 58 32 95 92 32 35 48 49 50 48 32 32 32 32 32 32 32}@0 {49 40 34 46 32 43 64 32 95 32 118 60 118 60 118 60 103 43 32 32 32 32 32 32 32}@0 {43 58 75 34 118 34 34 62 118 118 36 32 62 118 118 62 118 60 36 32 32 32 32 32 32}@0 {56 32 34 45 32 53 52 48 35 60 124 62 103 45 32 48 32 118 60 32 32 32 32 32 32}@0 {48 110 58 33 32 34 42 57 45 32 32 35 50 49 32 53 118 95 32 32 32 32 32 32 32}@0 {50 105 103 35 32 42 43 56 34 62 37 94 47 42 32 112 33 48 32 32 32 32 32 32 32}@0 {103 119 45 118 62 34 58 43 66 103 50 32 50 50 32 48 112 51 32 32 32 32 32 32 32}@0 {45 32 103 95 35 101 56 112 34 118 60 35 37 37 32 54 51 103 32 32 32 32 32 32 32}@0 {103 85 52 34 32 34 37 32 60 58 124 60 50 50 32 112 48 48 32 32 32 32 32 32 32}@0 {58 34 48 97 36 103 118 32 49 62 45 32 42 47 32 49 58 52 32 32 32 32 32 32 32}@0 {34 62 56 34 48 60 57 94 32 43 34 32 49 52 32 103 43 103 32 32 32 32 32 32 32}@0 {97 58 43 96 32 60 124 62 94 48 81 32 45 103 32 48 103 48 32 32 32 32 32 32 32}@0 {34 35 49 35 35 118 60 49 112 50 34 32 48 48 32 51 53 54 32 32 32 32 32 32 32}@0 {96 44 103 118 60 48 96 45 57 112 58 32 118 60 32 112 48 103 32 32 32 32 32 32 32}@0 {32 95 51 95 94 49 56 58 48 56 95 118 62 118 60 50 103 43 32 32 32 32 32 32 32}@0 {32 64 48 35 35 112 92 58 43 47 118 62 32 95 92 103 51 58 32 32 32 32 32 32 32}@0 {118 35 60 124 60 57 57 58 103 56 35 35 103 118 60 48 48 48 32 32 32 32 32 32 32}@0 {62 94 62 94 32 112 112 48 57 37 45 36 50 35 62 94 45 52 32 32 32 32 32 32 32}@0 {43 33 58 118 62 56 48 48 48 49 34 32 47 37 52 32 49 112 32 32 32 32 32 32 32}@0 {48 43 34 34 48 112 48 103 42 43 82 60 50 50 112 32 32 103 32 32 32 32 32 32 32}@0 {51 96 112 46 49 112 58 57 103 58 34 32 37 47 103 118 60 34 32 32 32 32 32 32 32}@0 {103 103 34 34 103 45 43 42 103 48 58 32 50 52 56 95 32 46 32 32 32 32 32 32 32}@0 {49 52 45 112 49 103 49 43 48 49 103 32 42 103 47 118 62 34 32 32 32 32 32 32 32}@0 {43 48 55 45 43 50 103 92 48 112 103 32 49 48 56 35 118 45 60 32 32 32 32 32 32}@0 {56 60 94 103 56 48 36 33 92 48 50 32 45 48 37 58 32 33 32 32 32 32 32 32 32}@0 {118 48 52 60 118 60 60 124 60 118 60 32 118 60 118 60 32 124 60 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0}@0
Make "funge2 {{34 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {111 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {108 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {108 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {101 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {72 62 32 94 32 32 32 32 32 32 32 32 32 32 32}@0 {34 32 32 44 32 32 32 32 32 32 32 32 32 32 32}@0 {118 118 58 95 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 50 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 53 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 42 88 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 44 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 64 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0}@0
Make "fungeheight 25
Make "fungeinput "
Make "fungespace {{[] [] [] [] [] []}@0 {[] [] [] [] [] []}@0 {[] [] [] [] [] []}@0 {[] [] [] [] [] []}@0 {[] [] [] [] [] []}@0}@0
Make "fungestack [8 4 46]
Make "fungewidth 80
Make "ip [77 5]
Make "iv [-1 0]
Make "line []
Make "line2 "by\ mtve\ at\ frox25.dhs.org\ \ ^\ \<\ \ \ \<\ \ \ \<\ \ \ \ \ \ \ \ \<\<\ \ \<\ \ \ \ $\<\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \<\ \<
Make "line3 "
Make "name1 [{{34 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {111 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {108 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {108 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {101 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {72 62 32 94 32 32 32 32 32 32 32 32 32 32 32}@0 {34 32 32 44 32 32 32 32 32 32 32 32 32 32 32}@0 {118 118 58 95 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 50 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 53 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 42 88 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 44 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 64 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0}@0 15 15]
Make "name2 [{{97 32 32}@0 {98 32 32}@0 {99 32 32}@0}@0 3 3]
Make "next []
Make "p1 1
Make "p2 3
Make "q 0
Make "savetest [{{34 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {111 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {108 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {108 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {101 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {72 62 32 94 32 32 32 32 32 32 32 32 32 32 32}@0 {34 32 32 44 32 32 32 32 32 32 32 32 32 32 32}@0 {118 118 58 95 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 50 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 53 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 42 88 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 44 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 64 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0 {32 32 32 32 32 32 32 32 32 32 32 32 32 32 32}@0}@0 15 15]
Make "tick "\

Make "v1 [1 2]
Make "v2 [3 4]
Make "wordsize 4294967296
